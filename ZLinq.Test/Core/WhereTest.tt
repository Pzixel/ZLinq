<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="$(SolutionDir)ZLinq.TTHelp\bin\$(Configuration)\ZLinq.TTHelp.dll" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="ZLinq.TTHelp" #>
<#@ output extension=".cs" #>

using System.Collections.Generic;
using System.Linq;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace ZLinq.Test.Core
{
    [TestClass]
    public class Where
	{		
		<# foreach (var sourceTypeInt in TextTemplate.ToInt(TextTemplate.StandardCollections)) 
		{ #>		    
		[TestMethod]
	    public void TestWhereToArray<#= TextTemplate.GetCollectionName(sourceTypeInt) #>()
		{
            var source = (<#= sourceTypeInt #>) Enumerable.Range(1, 100).<#= TextTemplate.ToArrayOrToList(sourceTypeInt) #>;

            var xArr = source.WhereToArray(x => x%3 == 0);
            var linqArr = source.Where(x => x%3 == 0).ToArray();

            Assert.IsTrue(xArr.Length == linqArr.Length);
            Assert.IsTrue(xArr.SequenceEqual(linqArr));
		}

		[TestMethod]
	    public void TestWhereToList<#= TextTemplate.GetCollectionName(sourceTypeInt) #>()
		{
		    var source = (<#= sourceTypeInt #>) Enumerable.Range(1, 100).<#= TextTemplate.ToArrayOrToList(sourceTypeInt) #>;

            var xArr = source.WhereToList(x => x%3 == 0);
            var linqArr = source.Where(x => x%3 == 0).ToList();

            Assert.IsTrue(xArr.Count == linqArr.Count);
            Assert.IsTrue(xArr.SequenceEqual(linqArr));
		}
		<# } #>
    }
}
