<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="$(SolutionDir)ZLinq.TTHelp\bin\$(Configuration)\ZLinq.TTHelp.dll" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="ZLinq.TTHelp" #>
<#@ output extension=".cs" #>

using System.Linq;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using ZLinq.Test.Helpers;

namespace ZLinq.Test.Core.Fold
{
    [TestClass]
    public class IsEqual
    {    
        <# foreach (var sourceType in TT.StandardCollections) { 
        string name = TT.GetCollectionName(sourceType);
        #>        
        [TestMethod]
        public void IsEqual<#= name #>()
        {
            var x = Enumerable.Range(1, 1024).To<#= name #>();
            var y = Enumerable.Range(1, 1024).To<#= name #>();
            var a = Enumerable.Range(2, 1024).To<#= name #>();
            var b = Enumerable.Range(1, 1000).To<#= name #>();

            Assert.IsTrue(x.IsEqual(y));
            Assert.IsTrue(y.IsEqual(x));

            Assert.IsTrue(x.IsEqual(x));
            Assert.IsTrue(y.IsEqual(y));

            Assert.IsFalse(x.IsEqual(a));
            Assert.IsFalse(x.IsEqual(b));

            Assert.IsFalse(y.IsEqual(a));
            Assert.IsFalse(y.IsEqual(b));
        }
        <# } #>    

        <# foreach (var sourceType in TT.StandardCollections) {
        string name = TT.GetCollectionName(sourceType);
         #>        
        [TestMethod]
        public void IsEqualMemberwise<#= TT.GetCollectionName(sourceType) #>()
        {
            var source1 = new object[1024];
            var source2 = new object[source1.Length];

            for (int i = 0; i < source1.Length; i++)
                source1[i] = source2[i] = new object();

            var x = source1.To<#= name #>();
            var y = source2.To<#= name #>();
            var a = Enumerable.Range(1, 1024).Select(t => (object) t).To<#= name #>();
            var b = Enumerable.Range(1, 1023).Select(t => (object) t).To<#= name #>();


            Assert.IsTrue(x.IsEqualMemberwise(y));
            Assert.IsTrue(y.IsEqualMemberwise(x));

            Assert.IsTrue(x.IsEqualMemberwise(x));
            Assert.IsTrue(y.IsEqualMemberwise(y));

            Assert.IsFalse(x.IsEqualMemberwise(a));
            Assert.IsFalse(x.IsEqualMemberwise(b));

            Assert.IsFalse(y.IsEqualMemberwise(a));
            Assert.IsFalse(y.IsEqualMemberwise(b));
        }
        <# } #>    

    }
}
